/* '!' */
/* '#' */
/* '$' */
/* '%' */
/* '*' */
/* '+' */
/* ',' */
/* '-' */
/* '.' */
/* '/' */
/* ':' */
/* '&lt;' */
/* '=' */
/* '&gt;' */
/* '?' */
/* '\' */
/* '^' */
/* '_' */
/* '{' */
/* '|' */
/* '}' */
/* '~' */
.wizard .alert-container.bottom {
  bottom: 6rem; }
#wizardContent {
  height: 50vh; }
.step-2,
.step-3 {
  display: none; }
.alert-container {
  position: fixed;
  z-index: 1030;
  pointer-events: none;
  padding: 16px;
  width: 35%; }
.alert-container * {
    pointer-events: all; }
.alert-container-inline .alert:last-child {
  margin-bottom: 16px; }
.section-header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding-top: 16px;
  padding-bottom: 8px; }
section {
  min-height: 600px; }
.specimen {
  margin-bottom: 15px;
  padding: 15px; }
.specimen:last-child {
    margin: 0; }
.swatch {
  text-align: center;
  margin-bottom: 15px;
  padding: 15px; }
.ramp .swatch {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }
.ramp .swatch:last-child {
    margin: 0; }
.row:last-child .swatch {
  margin-bottom: 0; }
.col-3.palette-dark, .col-3.palette-accessible {
  padding: 0; }
.charmap {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  margin: -8px; }
.charmap > div {
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    background-color: #f1f2f3;
    padding: 8px;
    margin: 8px; }
.charmap > div * {
      text-align: center;
      margin-bottom: 4px; }
.charmap > div *:first-child {
        margin-top: 4px; }
#containerExample,
#containerFluidExample {
  border: #adb2b6 1px solid; }
#modalFluidContainerExample .row [class^="col-"] {
  background: #f1f2f3;
  padding: 1rem; }
.modal-example-button {
  width: 200px; }
.palette-dark .charmap > div {
  background-color: #1b2329; }
.palette-dark #containerExample,
.palette-dark #containerFluidExample {
  border-color: #5a656d; }
.palette-dark #modalFluidContainerExample .row [class^="col-"] {
  background: #1b2329; }
.palette-accessible .charmap > div {
  background-color: #fff;
  border: 1px solid #838b92;
  border-radius: 3px; }
.palette-accessible #containerExample,
.palette-accessible #containerFluidExample {
  border-color: #838b92; }
.palette-accessible #modalFluidContainerExample .row [class^="col-"] {
  background: #fff; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
